/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%;font-size:10px;overflow-x:hidden}body{margin:0;font:1.6rem/1.5 'PT Sans',sans-serif;background:#797979}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%;height:auto}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}.mobile .-desktop,[hidden],template{display:none}@font-face{font-family:'PT Sans';src:local('PT Sans'),local('../fonts/ptsans/PTSans-Regular'),url(../fonts/ptsans/ptsans.woff2) format('woff2'),url(../fonts/ptsans/ptsans.woff) format('woff'),url(../fonts/ptsans/ptsans.ttf) format('truetype');font-weight:400;font-style:normal}@font-face{font-family:'PT Sans';src:local('PT Sans Italic'),local('../fonts/ptsans/PTSans-Italic'),url(../fonts/ptsans/ptsansitalic.woff2) format('woff2'),url(../fonts/ptsans/ptsansitalic.woff) format('woff'),url(../fonts/ptsans/ptsansitalic.ttf) format('truetype');font-weight:400;font-style:italic}@font-face{font-family:'PT Sans';src:local('PT Sans Bold'),local('../fonts/ptsans/PTSans-Bold'),url(../fonts/ptsans/ptsansbold.woff2) format('woff2'),url(../fonts/ptsans/ptsansbold.woff) format('woff'),url(../fonts/ptsans/ptsansbold.ttf) format('truetype');font-weight:700;font-style:normal}@font-face{font-family:'PT Sans';src:local('PT Sans Bold Italic'),local('../fonts/ptsans/PTSans-BoldItalic'),url(../fonts/ptsans/ptsansbolditalic.woff2) format('woff2'),url(../fonts/ptsans/ptsansbolditalic.woff) format('woff'),url(../fonts/ptsans/ptsansbolditalic.ttf) format('truetype');font-weight:700;font-style:italic}.-desktop,.mobile .-mobile{display:block}.-mobile,[type="text/template"]{display:none}*{-webkit-tap-highlight-color:transparent}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}@media screen and (max-width:1024px){html{font-size:6px}}@media screen and (max-width:768px){html{font-size:4px}}@media screen and (max-width:420px){html{font-size:3px}}a:focus,button:focus,input:focus{outline:0}h2,p{color:#2f1b15;margin:0;font-size:2.4rem;font-weight:700;line-height:4.983rem}p{color:#3d3d3d;font-size:1.5rem;font-weight:400;line-height:2.3rem}.sr{width:1px;height:1px;margin:-1px;position:absolute;clip:rect(1px,1px,1px,1px)}.container{position:relative;background:url(../img//bg.jpg) 0 0;padding:0 11.2rem;max-width:100rem;margin:0 auto}.page{min-height:calc(100% - 27.1rem - 0rem)}.stamp{position:absolute;right:5.4rem;top:4.8rem;width:25.2rem;height:10.6rem}.header{height:27.1rem}.header--container{height:27.1rem;padding-top:6.2rem}.header--img{width:auto;height:5.2rem}.header--logo{display:block;width:15.4rem;height:auto;-webkit-box-sizing:content-box;box-sizing:content-box}.header--heading{left:-4.3rem;right:0;margin:0 auto;position:absolute;top:15.4rem;width:22.1rem;height:11.8rem}.footer{height:0}.input--field{width:100%}.input--field__checkbox{display:-webkit-box;display:-ms-flexbox;display:flex;width:33.8%;padding-bottom:1rem}.input--field--heading{-ms-flex-negative:0;flex-shrink:0;padding-right:1.9rem;margin:.65rem 0;color:#2f1b15;font-size:2.2rem;font-weight:700;line-height:4.983rem}.input--field--heading__checkbox{color:#000;font-size:2.1rem;font-weight:700;line-height:2.5rem;position:relative;padding-left:2.8rem}.input--field--heading__checkbox::before{position:absolute;left:0;top:.5rem;content:'';width:1.9rem;height:1.8rem;background:url(../img/check.png) center no-repeat;background-size:cover}.input--field--heading__checkbox::after{position:absolute;left:-.3rem;top:-.4rem;content:'';width:3.2rem;height:2.5rem;background:url(../img/check__checked.png) center no-repeat;background-size:contain;opacity:0;-webkit-transition:.25s ease-in-out opacity;-o-transition:.25s ease-in-out opacity;transition:.25s ease-in-out opacity}.input--field__text{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex}.input__text{height:5rem}.input__date,.input__text,.multiinput{color:#231f20;font-family:'Courier';font-size:3rem;font-weight:400;line-height:3.6rem;padding:0 1.6rem;width:100%;border:0;outline:0;background-color:transparent;background:url(../img/texture.png) left bottom repeat-x;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;position:relative;top:-.6rem}.input__date--wrapper,.input__text--wrapper{padding-top:5.4rem}.input__checkbox{display:none}.input__checkbox:checked+.input--field--heading__checkbox::before{background:url(../img/check.png) center no-repeat;background-size:cover}.input__checkbox:checked+.input--field--heading__checkbox::after,.input__radio:checked+.input__radio--heading::after{opacity:1}.input__checkbox--table{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:wrap;flex-wrap:wrap;height:28.2rem;padding-top:2.5rem}.input__checkbox--wrapper{padding-top:3.7rem}.input__range{height:.3rem;background:url(../img/texture.png) left bottom repeat-x;position:relative;padding-top:3.5rem;width:76.8rem;left:.2rem}.input__range--wrapper{padding:2.5rem 0}.input__range--line:first-child{width:.3rem;height:2.5rem;background:#2f1b15;position:absolute;top:3.3rem;left:0}.input__range--line:first-child::after{content:'Не владею';color:#2f1b15;font-size:1.3rem;font-weight:700;line-height:1.8rem;position:absolute;left:-.1;bottom:-3.1rem;width:7rem}.input__range--line:nth-child(2),.input__range--line:nth-child(3){width:.3rem;height:1.1rem;background:#2f1b15;position:absolute;top:3.3rem;left:14.8rem}.input__range--line:nth-child(2)::after{content:'Использую готовые решения';bottom:-4.3rem;left:-.5rem;width:18rem}.input__range--line:nth-child(3){left:37.3rem}.input__range--line:nth-child(2)::after,.input__range--line:nth-child(3)::after,.input__range--line:nth-child(4)::after{color:#2f1b15;font-size:1.3rem;font-weight:700;line-height:1.8rem;position:absolute}.input__range--line:nth-child(3)::after{left:-.3rem;content:'Использую готовые решения и умею их переделывать';bottom:-5.2rem;width:17rem}.input__range--line:nth-child(4){width:.3rem;height:2.5rem;background:#2f1b15;position:absolute;top:3.3rem;right:0}.input__range--line:nth-child(4)::after{content:'Пишу сложный JS с нуля';bottom:-3.6rem;right:-.1rem;width:14rem}.input__range .ui-slider-handle{width:1.7rem;height:1.4rem;display:block;background:url(../img/arrow.png) left bottom repeat-x;background-size:contain;z-index:2;position:absolute;outline:0;margin-left:-.9rem;top:1.5rem}.input__radio{display:none}.input__radio--wrapper{padding-top:3.5rem}.input__radio--container{display:-webkit-box;display:-ms-flexbox;display:flex}.input__radio--label{cursor:pointer;margin-right:2rem;padding-left:3.4rem;padding-top:1.5rem}.input__radio--heading{color:#000;font-size:2rem;font-weight:700;line-height:2.5rem;position:relative}.input__radio--heading::after,.input__radio--heading::before{content:'';display:block;position:absolute;background-size:cover}.input__radio--heading::before{background:url(../img/radio.png) center no-repeat;left:-3.5rem;top:-.2rem;width:2.8rem;height:2.8rem}.input__radio--heading::after{left:-2.8rem;top:.5rem;width:1.4rem;height:1.4rem;background:url(../img/radio__select.png) center no-repeat;-webkit-transition:.25s ease-in-out opacity;-o-transition:.25s ease-in-out opacity;transition:.25s ease-in-out opacity;opacity:0}.input__date{width:20.6rem;padding:0;height:3.5rem;top:0;padding-left:1.1rem;padding-bottom:1.1rem}.multiinput{height:6rem;padding-left:0;padding-top:2rem}.multiinput--wrapper{padding-top:5.7rem}.multiinput--description{margin-bottom:2rem}.inputHidden,input{font-size:3rem}.inputHidden{display:inline-block;visibility:hidden;position:absolute;left:0;top:0;z-index:-1;font-family:'Courier'}.multiinput--container{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:76.7rem;left:.3rem}.date{padding-top:8.5rem;padding-bottom:7.5rem}.date--container{display:-webkit-box;display:-ms-flexbox;display:flex}.date--heading{color:#2f1b15;font-size:2.2rem;font-weight:700;line-height:4.983rem;margin-right:1.8rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
